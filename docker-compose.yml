version: "3.9"

services:
  website_db:
    container_name: website_db
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  nextapp:
    restart: unless-stopped
    container_name: nextapp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vfly.entrypoints=websecure"
      - "traefik.http.routers.vfly.rule=Host(`vfly.org.pl`, `www.vfly.org.pl`, `main.vfly.org.pl`)"
      - "traefik.http.routers.vfly.tls=true"
      - "traefik.http.routers.vfly.tls.certresolver=production"
      - "traefik.http.routers.vfly.tls.domains[0].main=vfly.org.pl"
      - "traefik.http.routers.vfly.tls.domains[1].main=www.vfly.org.pl"
      - "traefik.http.routers.vfly.tls.domains[2].main=main.vfly.org.pl"
    image: nextapp
    build:
      context: ./website
      dockerfile: Dockerfile
    ports:
      - "3112:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@website_db:5432/${POSTGRES_DB}
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - NEXT_PUBLIC_DISCORD_INVITE_URL=${NEXT_PUBLIC_DISCORD_INVITE_URL}
      - NEXT_PUBLIC_FACEBOOK_URL=${NEXT_PUBLIC_FACEBOOK_URL}
      - NEXT_PUBLIC_GITHUB_URL=${NEXT_PUBLIC_GITHUB_URL}
    depends_on:
      website_db:
        condition: service_healthy

networks:
  default:
    name: router
    external: true
